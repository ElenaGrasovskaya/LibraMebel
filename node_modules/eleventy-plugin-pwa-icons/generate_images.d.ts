import * as pwaAssetGenerator from 'pwa-asset-generator';
import { ManifestJsonIcon } from 'pwa-asset-generator/dist/models/result';
import { TransformOptions } from './types';
export declare type Options = Parameters<typeof pwaAssetGenerator.generateImages>[2];
export declare type LoggerFunction = Parameters<typeof pwaAssetGenerator.generateImages>[3];
export interface GenerateImageOptions {
    /** Path to the favicon file. */
    input: string;
    /** Path to directory of generated images. */
    output: string;
    /** An optional logger to log the result. */
    logger: LoggerFunction;
    /** Options for PWA image generator. */
    options: Options;
    publicDirectory: string;
}
export interface ImageResult {
    html: string;
    manifestJsonContent: ReadonlyArray<ManifestJsonIcon>;
}
export declare const handleImages: ({ icons, logger, options, buildDirectory, }: Pick<TransformOptions, "icons"> & {
    buildDirectory: string;
} & Pick<GenerateImageOptions, "logger" | "options">) => Promise<ImageResult | {
    html: string;
    manifestJsonContent: never[];
}>;
