{"version":3,"file":"pretty.js","sources":["../src/pretty.ts"],"sourcesContent":["import chalk, { Chalk } from 'chalk';\n\nimport { PLUGIN_NAME } from './constants';\n\n/** Convert Error to string. */\nconst errorToString = (error: Error) =>\n  error.name + ': ' + error.message + '\\n' + error.stack;\n\n/**\n * Log _message_ bound with _name_ of the process\n * to terminal.\n *\n * @param paint - function that paint _message_.\n * @param message\n * @param emoji - just for fun :)\n */\nconst log = (paint: Chalk, message: string | Error, emoji: string) =>\n  console.info(\n    ' ' +\n      chalk.black.bgYellowBright(new Date().toLocaleTimeString()) +\n      ' -> ' +\n      chalk.bold.gray(PLUGIN_NAME) +\n      ': ' +\n      paint(message instanceof Error ? errorToString(message) : message) +\n      ' ' +\n      emoji\n  );\n\n/**\n * Alert about starting of process.\n *\n * @param message\n */\nexport const start = (message: string) => log(chalk.green, message, 'üÜô');\n\n/**\n * Alert about successful ending of process.\n *\n * @param message\n */\nexport const done = (message: string) => log(chalk.magenta, message, 'üôå');\n\n/**\n * Alert about error that was occurred during process execution.\n *\n * @param message\n */\nexport const oops = (message: string | Error) => log(chalk.red, message, 'üí•');\n\n/** Shows warning message. */\nexport const warn = (message: string) => log(chalk.blue, message, '‚ùóÔ∏è');\n"],"names":["log","paint","message","emoji","console","info","chalk","black","bgYellowBright","Date","toLocaleTimeString","bold","gray","PLUGIN_NAME","Error","error","name","stack","magenta","red","green"],"mappings":"0MAKA,MAWMA,EAAM,CAACC,EAAcC,EAAyBC,KAClDC,OAAAA,QAAQC,KACN,IACEC,UAAMC,MAAMC,gBAAe,IAAIC,MAAOC,sBACtC,OACAJ,UAAMK,KAAKC,KAAKC,eAChB,KACAZ,EAAMC,aAAmBY,OAlBRC,EAkB8Bb,GAjB7Cc,KAAO,KAAOD,EAAMb,QAAU,KAAOa,EAAME,MAiBaf,GAC1D,IACAC,GApBgB,IAACY,gBAmCFb,GAAoBF,EAAIM,UAAMY,QAAShB,EAAS,mBAOhDA,GAA4BF,EAAIM,UAAMa,IAAKjB,EAAS,oBAdnDA,GAAoBF,EAAIM,UAAMc,MAAOlB,EAAS"}