"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("path"),t=require("workbox-build"),r=require("./to_megabytes.js"),i=require("./url.js"),o=require("./mode.js"),s=require("./path_stats.js"),n=require("./pretty.js"),a=require("./transform_entries.js"),l=require("./injectable_script.js"),u=require("./constants.js");exports.cache=(c,{scope:d=u.URL_DELIMITER,enabled:p=o.isProduction(),publicDirectory:h="",generateSWOptions:g}={})=>{if(p){const p=i.joinUrlParts(h,"service-worker.js");let f;c.addTransform("service-worker",(function(e,t){var r,i;if(null!=f||(f=s.getBuildDirectory(null!==(r=this.outputPath)&&void 0!==r?r:t)),t.endsWith("html")){const r=e.replace("</head>",l.buildSWScriptRegistration(p,d)+"</head>");return n.done(`Service worker registration script is injected into "${n.bold(null!==(i=this.outputPath)&&void 0!==i?i:t)}"`),r}return e})),c.on("afterBuild",(()=>Promise.resolve(n.start("Generation of service worker has started.")).then((()=>t.generateSW(Object.assign({cacheId:"EleventyPlugin"+u.PLUGIN_NAME,swDest:e.join(f,p),sourcemap:!o.isProduction(),skipWaiting:!0,globPatterns:[`*.{${u.EXTENSIONS}}`,`**/*.{${u.EXTENSIONS}}`],clientsClaim:!0,directoryIndex:"index.html",globDirectory:f,inlineWorkboxRuntime:!0,cleanupOutdatedCaches:!0,runtimeCaching:[{handler:"NetworkFirst",urlPattern:({url:e})=>!new RegExp(`.+\\.(?:${["jpg","png","gif","ico","svg","jpeg","avif","webp","eot","ttf","otf","ttc","woff","woff2"].join("|")})`).test(e)},{handler:"StaleWhileRevalidate",urlPattern:new RegExp(`.+\\.(?:${u.STATIC_FORMATS.join("|")})$`)}],manifestTransforms:[a.makeManifestURlsAbsolute]},null!=g?g:{})))).then((({size:e,count:t})=>n.done(`${n.bold(t)} files will be precached, totaling ${n.bold(r.toMegabytes(e))} MB.`)),n.oops)))}};
//# sourceMappingURL=index.js.map
