{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { join, resolve } from 'path';\n\n// @ts-ignore\nimport Image from '@11ty/eleventy-img';\nimport { OptimizeOptions } from 'svgo';\n\nimport { log } from './logger';\nimport { isUrl } from './is_url';\nimport { optimizeSVG } from './optimize_svg';\nimport { getPublicPath } from './public_path';\nimport { getRasterOptimizerOptions } from './raster_optimizer_options';\nimport {\n  SVG_NAME,\n  DEFAULT_BUILD_DIRECTORY_NAME,\n  DEFAULT_ASSETS_DIRECTORY_NAME,\n  DEFAULT_IMAGES_DIRECTORY_NAME,\n  DEFAULT_SOURCE_DIRECTORY_NAME,\n} from './constants';\n\nexport interface ImageShortCodeOptions {\n  /**\n   * Path to directory where all images live.\n   *\n   * Should start from the _current working directory_.\n   */\n  inputDirectory?: string;\n  /**\n   * Path to directory for optimized and transformed images.\n   * First part of the path is meant to be the _output_ directory.\n   *\n   * Should start from the _current working directory_.\n   */\n  outputDirectory?: string;\n  /**\n   * Options for [svgo](https://github.com/svg/svgo) package.\n   * for subtle configuration of SVGs optimizations.\n   */\n  svgoOptions?: OptimizeOptions;\n  /**\n   * Options for [@11ty/eleventy-img](https://www.11ty.dev/docs/plugins/image/) package.\n   * Is is used for optimizations of raster images.\n   * For more info see its documentation.\n   */\n  rasterOptions?: Record<string, any>;\n}\n\nexport interface ImageAttributes {\n  /** Alternative text for <img>. */\n  alt?: string;\n  /** Title for <img>. */\n  title?: string;\n  /** Class names for <img>. */\n  classes?: string | ReadonlyArray<string>;\n}\n\n/** Creates `image` shortcode. */\nexport const createImageShortcode =\n  ({\n    inputDirectory = join(\n      DEFAULT_SOURCE_DIRECTORY_NAME,\n      DEFAULT_ASSETS_DIRECTORY_NAME,\n      DEFAULT_IMAGES_DIRECTORY_NAME\n    ),\n    outputDirectory = join(\n      DEFAULT_BUILD_DIRECTORY_NAME,\n      DEFAULT_IMAGES_DIRECTORY_NAME\n    ),\n    svgoOptions = {},\n    rasterOptions = {},\n  }: ImageShortCodeOptions = {}) =>\n  async (\n    src: string,\n    { alt = '', title = '', classes = [] }: ImageAttributes = {}\n  ): Promise<string> => {\n    const classNames: ReadonlyArray<string> = Array.isArray(classes)\n      ? classes\n      : [classes];\n\n    const input = isUrl(src) ? src : resolve(inputDirectory, src);\n\n    log(`Start optimizing \"${input}\" file.`);\n\n    const stats = await Image(\n      input,\n      getRasterOptimizerOptions(\n        input,\n        getPublicPath(input, inputDirectory, outputDirectory),\n        rasterOptions\n      )\n    ).catch((error: Error) => log('Could not optimize image: %O', error));\n\n    log(`Image \"${input}\" is optimized. Stats:\\n%O`, stats);\n\n    return SVG_NAME in stats\n      ? optimizeSVG(\n          resolve(stats[SVG_NAME][0].outputPath),\n          classNames,\n          svgoOptions\n        )\n      : Image.generateHTML(\n          stats,\n          {\n            alt,\n            title,\n            class: classNames.join(' '),\n            // Experimental technology: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-loading\n            loading: 'lazy',\n            decoding: 'async',\n          },\n          {\n            // Strip the whitespace from the output of the `<picture>` element.\n            whitespaceMode: 'inline',\n          }\n        );\n  };\n"],"names":["inputDirectory","join","DEFAULT_SOURCE_DIRECTORY_NAME","DEFAULT_ASSETS_DIRECTORY_NAME","DEFAULT_IMAGES_DIRECTORY_NAME","outputDirectory","DEFAULT_BUILD_DIRECTORY_NAME","svgoOptions","rasterOptions","async","src","alt","title","classes","classNames","Array","isArray","input","isUrl","resolve","log","stats","Image","getRasterOptimizerOptions","getPublicPath","catch","error","SVG_NAME","optimizeSVG","outputPath","generateHTML","class","loading","decoding","whitespaceMode"],"mappings":"gaAyDE,EACEA,eAAAA,EAAiBC,OACfC,gCACAC,gCACAC,iCAEFC,gBAAAA,EAAkBJ,OAChBK,+BACAF,iCAEFG,YAAAA,EAAc,GACdC,cAAAA,EAAgB,IACS,KAC3BC,MACEC,GACEC,IAAAA,EAAM,GAAIC,MAAAA,EAAQ,GAAIC,QAAAA,EAAU,IAAwB,MAE1D,MAAMC,EAAoCC,MAAMC,QAAQH,GACpDA,EACA,CAACA,GAECI,EAAQC,QAAMR,GAAOA,EAAMS,UAAQnB,EAAgBU,GAEzDU,MAAI,qBAAqBH,YAEzB,MAAMI,QAAcC,UAClBL,EACAM,4BACEN,EACAO,gBAAcP,EAAOjB,EAAgBK,GACrCG,IAEFiB,OAAOC,GAAiBN,MAAI,+BAAgCM,KAI9D,OAFAN,MAAI,UAAUH,8BAAmCI,GAE1CM,cAAYN,EACfO,cACET,UAAQE,EAAMM,YAAU,GAAGE,YAC3Bf,EACAP,GAEFe,UAAMQ,aACJT,EACA,CACEV,IAAAA,EACAC,MAAAA,EACAmB,MAAOjB,EAAWb,KAAK,KAEvB+B,QAAS,OACTC,SAAU,SAEZ,CAEEC,eAAgB"}