{"version":3,"file":"gzip.js","sources":["../src/gzip.ts"],"sourcesContent":["import { gzip as gzipCompress, constants } from 'zlib';\n\nimport { CompressedContentInfo } from './types';\n\n/** Compress content with `gzip` algorithm. */\nexport const gzip = (\n  content: string,\n  outputPath: string\n): Promise<CompressedContentInfo> =>\n  new Promise<Buffer>((resolve, reject) =>\n    gzipCompress(\n      content,\n      {\n        level: constants.Z_MAX_LEVEL,\n      },\n      (error, compressed) => (error ? reject(error) : resolve(compressed))\n    )\n  ).then((data) => ({ data, url: outputPath + '.gz' }));\n"],"names":["content","outputPath","Promise","resolve","reject","gzipCompress","level","constants","Z_MAX_LEVEL","error","compressed","then","data","url"],"mappings":"uGAKoB,CAClBA,EACAC,IAEA,IAAIC,SAAgB,CAACC,EAASC,IAC5BC,OACEL,EACA,CACEM,MAAOC,YAAUC,cAEnB,CAACC,EAAOC,IAAgBD,EAAQL,EAAOK,GAASN,EAAQO,OAE1DC,MAAMC,KAAYA,KAAAA,EAAMC,IAAKZ,EAAa"}