{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { sep } from 'path';\n\nimport { isProduction } from './is_production';\nimport { CompressAlgorithm } from './types';\nimport { compressHTMLWithLinks } from './compress_html_with_links';\n\nexport interface CompressPluginOptions {\n  enabled?: boolean;\n  algorithm?: CompressAlgorithm | ReadonlyArray<CompressAlgorithm>;\n}\n\n/** Build directory where Eleventy write templates. */\nlet buildDirectory: string;\n\n/**\n * Compress content with a specified `algorithm`.\n *\n * At current time available algorithms are:\n *\n *  - [`brotli`](https://brotli.org)\n *  - [`gzip`](http://www.gzip.org)\n *  - [`deflate`](https://en.wikipedia.org/wiki/Deflate)\n *\n * **This plugin should be added last to Eleventy.**\n */\nexport const compress = (\n  config: Record<string, Function>,\n  { enabled = isProduction(), algorithm = 'brotli' }: CompressPluginOptions = {}\n) => {\n  if (enabled) {\n    config.addTransform(\n      'compress',\n      async (content: string, outputPath: string) => {\n        if (outputPath.endsWith('html')) {\n          // We can safely extract name of the build directory,\n          // because it is first directory in _outputPath_.\n          buildDirectory ??= outputPath.split(sep)[0];\n\n          await compressHTMLWithLinks(\n            content,\n            outputPath,\n            algorithm,\n            buildDirectory\n          );\n        }\n\n        return content;\n      }\n    );\n  }\n};\n"],"names":["buildDirectory","config","enabled","isProduction","algorithm","addTransform","async","content","outputPath","endsWith","split","sep","compressHTMLWithLinks"],"mappings":"qKAYA,IAAIA,mBAaoB,CACtBC,GACEC,QAAAA,EAAUC,iBAAgBC,UAAAA,EAAY,UAAoC,MAExEF,GACFD,EAAOI,aACL,YACAC,MAAOC,EAAiBC,KAClBA,EAAWC,SAAS,UAGtBT,MAAAA,IAAAA,EAAmBQ,EAAWE,MAAMC,OAAK,UAEnCC,wBACJL,EACAC,EACAJ,EACAJ,IAIGO"}